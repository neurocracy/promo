// -----------------------------------------------------------------------------
//   Base typography responsive partial
// -----------------------------------------------------------------------------

///
/// Whether to use responsive type.
///
$use-responsive-type: true !default;

///
/// The minimum responsive font scale.
///
/// @see {mixin} responsive-type
///
$font-scale-min: 1.067 !default;

///
/// The minimum responsive font scale.
///
/// @see {mixin} responsive-type
///
$font-scale-max: 1.2 !default;

///
/// The viewport width where the responsive font-size will not get any smaller.
///
/// This sets the point where responsive font size will be at $font-scale-min
/// and will not get any smaller, regardless of the viewport width below this
/// point. Essentially a minimum value clamp.
///
$font-scale-width-min: 35em !default;

///
/// The viewport width where the responsive font-size will not get any larger.
///
/// This sets the point where responsive font-size will be at $font-scale-max
/// and will not get any larger, regardless of the viewport width past this
/// point. Essentially a maximum value clamp.
///
$font-scale-width-max: 80em !default;

///
/// Generate responsive type properties based on screen size, within a range.
///
/// This calculates a font property based on the screen size, with minimum and
/// maximum values. This removes the screen media query found in the original
/// by Mike Riethmuller this is based on.
///
/// @param $properties {List}
///   List of properties to modify.
///
/// @param $min-screen {Number}
///   The minimum screen width to interpolate property values to.
///
/// @param $max-screen {Number}
///   The maximum screen width to interpolate property values to.
///
/// @param $min-value {Number}
///   The minimum value to interpolate property values to at the minimum screen
///   width.
///
/// @param $max-value {Number}
///   The maximum value to interpolate property values to at the maximum screen
///   width.
///
/// @link https://codepen.io/MadeByMike/pen/7744b5fc445e2b34a9e2bb1e21e8b09c
/// @link https://codepen.io/MadeByMike/pen/VvwqvW
/// @link https://madebymike.com.au/writing/fluid-type-calc-examples/
///
/// @require {Function} calc-responsive-value
///
@mixin responsive-type(
  $properties, $min-screen, $max-screen, $min-value, $max-value
) {
  @supports (font-size: calc(1vw * 2)) {
    // Set property minimum values.
    @each $property in $properties {
      #{$property}: $min-value;
    }

    // When we're wider than the minimum screen width, use the interpolated
    // value.
    @media (min-width: $min-screen) {
      @each $property in $properties {
        #{$property}: calc-responsive-value(
          $min-screen, $min-value, $max-screen, $max-value
        );
      }
    }

    // When we're at or wider than the maximum width, use the maximum value.
    @media (min-width: $max-screen) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

html {
  // Use responsive type if set to do so. Note that the responsive-type mixin
  // has a @supports check so we don't need one here.
  @if $use-responsive-type == true {
    @include responsive-type(
      font-size,
      $font-scale-width-min,
      $font-scale-width-max,
      $font-scale-min * 1em,
      $font-scale-max * 1em
    );
  }
}
