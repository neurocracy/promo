// -----------------------------------------------------------------------------
//   Persistent promo partial
// -----------------------------------------------------------------------------

@use '../helpers/colour' as colour-helpers;
@use '../helpers/motion';
@use '../layout/config' as layout-config;
@use '../typography/config' as typography-config;
@use '../typography/heading';
@use '../variables/animation' as animation-variables;
@use '../variables/colours' as colour-variables;

///
/// Minimum viewport width to display persistent promo in two columns.
///
$two-column-min-width: 40rem;

///
/// Persistent promo base font size.
///
$base-font-size: 110%;

///
/// Persistent promo font size increments.
///
/// Keys are @media min-widths while the values are the font sizes.
///
/// @require {variable} $two-column-min-width
///
$font-size-increments: (
  30em: $base-font-size + 10%,
  40em: $base-font-size + 20%,
  50em: $base-font-size + 30%,
  60em: $base-font-size + 40%,
);

///
/// Persistent promo icon size.
///
$icon-size: 1.95em;

///
/// Persistent promo drop shadow value on light backgrounds.
///
/// Note the addition of the spread radius to make the shadow intense enough for
/// the effect we want. This seems to perform more smoothly on mobile than
/// layering three shadows, which was the previous method we used.
///
$drop-shadow-on-light: 0 0 1rem 0.8rem colour-variables.$background-light;

///
/// Persistent promo drop shadow value on dark backgrounds.
///
$drop-shadow-on-dark: 0 0 0.3rem colour-variables.$background-dark;

///
/// Persistent promo reveal animation delay.
///
$reveal-animation-delay: animation-variables.$home-reveal-delay +
  animation-variables.$home-reveal-duration;

///
/// Persistent promo reveal animation keyframes.
///
@keyframes persistent-promo-reveal {
  0% {
    transform: translateY(calc(100% + #{layout-config.$viewport-padding}));
  }
  100% {
    transform: translateY(0%);
  }
}

.persistent-promo {
  // Replace default list styles.
  margin:     0 auto;
  padding:    layout-config.$viewport-padding !important;
  list-style: none;

  // Remove the margin between list items if modern grid is supported.
  @supports (grid-area: auto) {
    &__item + &__item {
      margin-top: 0;
    }
  }

  max-width:  layout-config.$max-width;

  position: fixed;

  left:     0;
  right:    0;
  bottom:   0;

  @supports (grid-area: auto) {
    display: grid;
    grid-gap: layout-config.$viewport-padding;

    grid-template-columns: minmax(min-content, 1fr);
    justify-items: start;

    @media (min-width: $two-column-min-width) {
      grid-template-columns: repeat(2, max-content);
    }
  }

  // Disable pointer events so that empty areas of the list don't block clicks/
  // taps to content underneath. This is undone in &__item {} rule lower down.
  pointer-events: none;

  &__item {

    ///
    /// Local stacking order. Later in the list means a higher z-index.
    ///
    $local-stacking-order: shadow, content;

    font-family:    heading.$font-stack;
    font-weight:    typography-config.$font-weight-strong;
    text-transform: uppercase;

    font-size:      $base-font-size;

    // Output the font size increments at their specified viewport min-widths.
    @each $min-width, $font-size in $font-size-increments {
      @media (min-width: $min-width) {
        font-size:  $font-size;
      }
    }

    // Re-enable clicking/tapping on list items.
    pointer-events: auto;

    &::before,
    :any-link {
      border-radius: 4em;
    }

    // This provides the shadow for this item. The reason the shadow isn't
    // applied to the list item or link itself is so that all the shadows can be
    // layered together below all links, so that one item's shadow doesn't
    // overlap a link. This isn't a problem on the dark colour scheme but does
    // occur in the light scheme with its much larger shadow radius.
    &::before {

      content: '';

      height: 100%;

      z-index: index($local-stacking-order, shadow);

      display: block;

      // Background colour is to fill in the shadow element in case of sub-pixel
      // rounding errors in rendering leaking the content underneath through.
      background-color: colour-variables.$background-light;

      box-shadow: $drop-shadow-on-light;

      @include colour-helpers.on-dark-scheme {

        background-color: colour-variables.$background-dark;

        box-shadow: $drop-shadow-on-dark;

      }

    }

    :any-link {
      position: relative;

      // Offsets the link back up where it would have been if the ::before
      // pseudo element wasn't taking up vertical space.
      transform: translateY(-100%);

      z-index: index($local-stacking-order, content);

      @supports (grid-area: auto) {
        display:  grid;
        align-items: center;
      }

      min-height: 1.5em;

      padding-top:    0.4em;
      padding-bottom: 0.4em;

      html[dir='ltr'] & {
        padding-left:   0.5em;
        padding-right:  0.8em;
      }
      html[dir='rtl'] & {
        padding-left:   0.8em;
        padding-right:  0.5em;
      }

      color: colour-variables.$foreground-on-dark;

      text-decoration-color: rgba(colour-variables.$foreground-on-dark, 0.6);

      &:hover {
        text-decoration-color: colour-variables.$foreground-on-dark;

        filter: brightness(130%);
      }

      &:active {
        color: rgba(colour-variables.$foreground-on-dark, 0.6);
        text-decoration-color: rgba(colour-variables.$foreground-on-dark, 0.6);
      }

      &::before {
        content: '';

        display:  inline-block;

        position: absolute;

        left: 0.15em;
        top:  50%;

        z-index: 1;

        width:  $icon-size;
        height: $icon-size;

        margin-top: calc(#{$icon-size} / 2 * -1);

        border-radius: 100%;

        background-color: colour-variables.$foreground-on-dark;
      }

      // This converts the icons to grid so that things line up well vertically
      // and in edge cases where the text doesn't have enough room and must wrap
      // to a second line.
      .ambientimpact-icon {
        position: relative;
        z-index: 2;

        @supports (grid-area: auto) {
          display: grid;
          grid-template-columns: min-content 1fr;
          grid-column-gap: 1.1em;
          align-items: center;
        }

        &__icon {
          html[dir='ltr'] & {
            padding-right:  0;
          }

          html[dir='rtl'] & {
            padding-left:   0;
          }
        }
      }
    }
  }

  &__kickstarter {
    :any-link {
      background-color: colour-variables.$kickstarter-green;
    }

    .ambientimpact-icon__icon {
      // Black Lives Matter black.
      fill: black;
    }

    @media (max-width: 30em) {
      // Reduce the Kickstarter font size on narrow screens to attempt to fit
      // more text on one line.
      .ambientimpact-icon__text {
        font-size: 85%;
      }
    }
  }

  &__patreon {

    ///
    /// Patreon "Fiery Coral", darkened for better contrast and accessibility.
    ///
    $patreon-fiery-coral-darkened: scale-color(
      colour-variables.$patreon-fiery-coral, $lightness: -25%, $saturation: -45%
    );

    :any-link {
      background-color: $patreon-fiery-coral-darkened;
    }

    .ambientimpact-icon__icon {

      fill: $patreon-fiery-coral-darkened;

      // Scale and move the icon slightly to make it feel more visually balanced
      // inside the circle.
      transform: scale(0.95) translateX(7%) translateY(2%);

    }

  }

  &__trailer {
    :any-link {
      // We're using Omnipedia blue rather than Vimeo's blue here as it Vimeo's
      // clashes a bit with our colour scheme.
      background-color: colour-variables.$omnipedia-blue;
    }

    // Use Vimeo blue for the play icon.
    .ambientimpact-icon__icon {
      fill: colour-variables.$vimeo-blue;

      position: relative;
      // This needs shifting slightly to make it feel properly centred. Magic
      // number alert.
      left: $icon-size * 0.077;
    }
  }

  &__site {
    :any-link {
      background-color: colour-variables.$omnipedia-blue;
    }

    .ambientimpact-icon__icon {
      fill: colour-variables.$omnipedia-blue;

      transform: scale(1.3) translateX(2%);
    }

    .ambientimpact-icon__text {
      transform: translateX(-2%);
    }
  }

  // Slides the list and list items into view after a short delay on loading.
  @media (prefers-reduced-motion: no-preference) {
    &,
    &__item + &__item {
      animation-name:             persistent-promo-reveal;
      animation-duration:         0.4s;
      animation-timing-function:  motion.$easing-decelerate;
      animation-fill-mode:        backwards;
    }

    animation-delay: $reveal-animation-delay;

    // Apply a longer delay to the second list item for a staggered effect.
    &__item + &__item {
      animation-delay: $reveal-animation-delay + 0.3s;
    }
  }

  // Headroom.js stuff follows. Note that the slide effect is still applied if
  // the user prefers reduced motion as it adds a sense of where the items are
  // going to or coming from, but the staggered effect is disabled in this case.

  // Headroom.js initialized properties.
  &--initialized,
  &--initialized &__item + &__item {
    transition-property:        transform;
    transition-duration:        250ms;
    transition-timing-function: motion.$easing-standard;

    will-change: transform;
  }

  // Shows the items when Headroom.js considers them pinned.
  &--pinned,
  &--pinned &__item + &__item {
    transform: translateY(0%);
  }

  // Shows list and items if anything within the list becomes focused,
  // overriding whether Headroom.js considers this unpinned.
  &:focus-within,
  &:focus-within &__item + &__item {
    transform: translateY(0%);
  }

  // Hides the list and items if Headroom.js marks the unpinned.
  &--unpinned,
  &--unpinned &__item + &__item {
    transform: translateY(calc(100% + #{layout-config.$viewport-padding}));
  }

  // This adds a brief delay on the second list item's transition to give it a
  // bit more personality and physicality.
  @media (prefers-reduced-motion: no-preference) {
    &__item + &__item {
      transition-delay: 150ms;
    }
  }
}
